package com.ThymeTheory.Rayne.graphics;

import java.util.Random;

import com.ThymeTheory.Rayne.level.tile.Tile;
import com.ThymeTheory.entity.projectile.Projectile;
//import com.ThymeTheory.entity.mob.Player;

public class Screen {
	
	public int width;
	public int height;
	public int[] pixels;
	// added map_size so i can change the map size and mask freely without breaking the code
	public int MAP_SIZE = 128;
	public int MAP_SIZE_MASK = MAP_SIZE - 1;
	
	public int xOffset, yOffset;
	
	public int[] tiles = new int[MAP_SIZE * MAP_SIZE];
	
	private Random random = new Random();
	
	
	public Screen(int width, int height) {
		this.width = width;
		this.height = height;
		pixels = new int[width * height];
		
		for (int i = 0; i < MAP_SIZE * MAP_SIZE; i++) {
			tiles[i] = random.nextInt(0xFFFFFF);
		}
		
	}
	
	public void clear() {
		for (int i = 0; i < pixels.length; i++) {
			pixels[i] = 0;
			
		}
	}
	

	
	public void renderTile(int xp, int yp, Sprite sprite) {	
		xp -= xOffset;
		yp -= yOffset;		
		for (int y = 0; y < sprite.SIZE; y++) {
			int ya = y + yp;
			for (int x = 0; x < sprite.SIZE; x++) {
				int xa = x + xp;
				if (xa < -sprite.SIZE || xa >= width || ya < 0 || ya >= height) break;
				if (xa < 0) xa = 0;
				pixels[xa + ya * width] = sprite.pixels[x + y * sprite.SIZE];
				
			}
		}
	}
	public void renderPlayer (int xp, int yp, Sprite sprite) {
		xp -= xOffset;
		yp -= yOffset;			
				for (int y = 0; y < 16; y++) {
					int ya = y + yp;
					for (int x = 0; x < 16; x++) {
						int xa = x + xp;
     					if (xa < -16 || xa >= width || ya < 0 || ya >= height) break;
						if (xa < 0) xa = 0;			
				int col = sprite.pixels[((x * 2) & 31) + ((y * 2) & 31) * sprite.SIZE];


		        if (col != 0xFFFF00FF) pixels[xa + ya * width] = col;

		//			}
	//			}
//			}
		}
		}
	}
	
	public void renderProjectile(int xp, int yp, Projectile p) {	
		xp -= xOffset;
		yp -= yOffset;		
		for (int y = 0; y < p.getSpriteSize(); y++) {
			int ya = y + yp;
			for (int x = 0; x < p.getSpriteSize(); x++) {
				int xa = x + xp;
				if (xa < -p.getSpriteSize() || xa >= width || ya < 0 || ya >= height) break;
				if (xa < 0) xa = 0;
				int col = p.getSprite().pixels[x + y * p.getSpriteSize()];
				if (col !=0xFFF00FF)
				pixels[xa + ya * width] = col;
				
			}
		}
	}
	
	public void setOffset(int xOffset, int yOffset) {
		this.xOffset = xOffset;
		this.yOffset = yOffset;
		
	}
		

public void renderTile(int xp, int yp, Tile tile){ renderTile(xp, yp, tile.sprite); }

}
